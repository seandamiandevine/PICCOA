duplicated(models$id)
models$age_group = factor(ifelse(models$id<100, 'Old', 'Young'), levels=c('Young', 'Old'))
models$condition = factor(models$condition)
contrasts(models$age_group) = contr.sum(2)
contrasts(models$condition) = contr.sum(2)
# N excluded
tmp = models[!duplicated(models$id),]
nexc = tapply(tmp$BIC, list(tmp$condition, tmp$age_group), function(x) sum(is.na(x)))
sum(nexc)
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
capture.output(list(summary(alm), CI=CI, d=cohend), file='output/alm_ethics.txt')
t0lm = lm(pars~age_group*condition, data=t0pars)
summary(t0lm)
CI = confint(t0lm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=t0pars), cond = effsize::cohen.d(pars~condition,data=t0pars))
capture.output(list(summary(t0lm), CI=CI, d=cohend), file='output/t0lm_ethics.txt')
pdf('RFTDDMpars_ethics.pdf', width=12, height=4)
# a
apars = models[models$parsname=='a',]
cutoff = mean(apars$LL, na.rm=T) + 3*sd(apars$LL, na.rm=T)
apars  = apars[apars$LL < cutoff,]
ma  = tapply(apars$pars, list(apars$condition, apars$age_group), mean, na.rm=T)
sea = tapply(apars$pars, list(apars$condition, apars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(ma-sea,ma+sea)))
plot(ma['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Decision Threshold', xlab='', main=expression(a))
arrows(c(1,2), ma['Stable',]-sea['Stable',], c(1,2), ma['Stable',]+sea['Stable',], length=0, col='brown')
points(ma['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), ma['Decreasing',]-sea['Decreasing',], c(1,2), ma['Decreasing',]+sea['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
capture.output(list(summary(alm), CI=CI, d=cohend), file='output/alm_ethics.txt')
# ter
t0pars = models[models$parsname=='t0',]
mt0  = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), mean, na.rm=T)
set0 = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mt0-set0,mt0+set0)))
plot(mt0['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Non-Decision Time', xlab='', main=expression(t0))
arrows(c(1,2), mt0['Stable',]-set0['Stable',], c(1,2), mt0['Stable',]+set0['Stable',], length=0, col='brown')
points(mt0['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mt0['Decreasing',]-set0['Decreasing',], c(1,2), mt0['Decreasing',]+set0['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
t0lm = lm(pars~age_group*condition, data=t0pars)
summary(t0lm)
CI = confint(t0lm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=t0pars), cond = effsize::cohen.d(pars~condition,data=t0pars))
capture.output(list(summary(t0lm), CI=CI, d=cohend), file='output/t0lm_ethics.txt')
# nk
nkpars = models[models$parsname=='nk',]
mnk  = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), mean, na.rm=T)
senk = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mnk-senk,mnk+senk)))
plot(mnk['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='RFT Window', xlab='', main=expression(nt))
arrows(c(1,2), mnk['Stable',]-senk['Stable',], c(1,2), mnk['Stable',]+senk['Stable',], length=0, col='brown')
points(mnk['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mnk['Decreasing',]-senk['Decreasing',], c(1,2), mnk['Decreasing',]+senk['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
nklm = lm(pars~age_group*condition, data=nkpars)
summary(nklm)
CI = confint(nklm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=nkpars), cond = effsize::cohen.d(pars~condition,data=nkpars))
capture.output(list(summary(nklm), CI=CI,d=cohend), file='output/nklm_ethics.txt')
dev.off()
pdf('plots/RFTDDMpars_ethics.pdf', width=12, height=4)
layout(matrix(1:3,1,3))
# a
apars = models[models$parsname=='a',]
cutoff = mean(apars$LL, na.rm=T) + 3*sd(apars$LL, na.rm=T)
apars  = apars[apars$LL < cutoff,]
ma  = tapply(apars$pars, list(apars$condition, apars$age_group), mean, na.rm=T)
sea = tapply(apars$pars, list(apars$condition, apars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(ma-sea,ma+sea)))
plot(ma['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Decision Threshold', xlab='', main=expression(a))
arrows(c(1,2), ma['Stable',]-sea['Stable',], c(1,2), ma['Stable',]+sea['Stable',], length=0, col='brown')
points(ma['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), ma['Decreasing',]-sea['Decreasing',], c(1,2), ma['Decreasing',]+sea['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
capture.output(list(summary(alm), CI=CI, d=cohend), file='output/alm_ethics.txt')
# ter
t0pars = models[models$parsname=='t0',]
mt0  = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), mean, na.rm=T)
set0 = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mt0-set0,mt0+set0)))
plot(mt0['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Non-Decision Time', xlab='', main=expression(t0))
arrows(c(1,2), mt0['Stable',]-set0['Stable',], c(1,2), mt0['Stable',]+set0['Stable',], length=0, col='brown')
points(mt0['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mt0['Decreasing',]-set0['Decreasing',], c(1,2), mt0['Decreasing',]+set0['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
t0lm = lm(pars~age_group*condition, data=t0pars)
summary(t0lm)
CI = confint(t0lm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=t0pars), cond = effsize::cohen.d(pars~condition,data=t0pars))
capture.output(list(summary(t0lm), CI=CI, d=cohend), file='output/t0lm_ethics.txt')
# nk
nkpars = models[models$parsname=='nk',]
mnk  = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), mean, na.rm=T)
senk = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mnk-senk,mnk+senk)))
plot(mnk['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='RFT Window', xlab='', main=expression(nt))
arrows(c(1,2), mnk['Stable',]-senk['Stable',], c(1,2), mnk['Stable',]+senk['Stable',], length=0, col='brown')
points(mnk['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mnk['Decreasing',]-senk['Decreasing',], c(1,2), mnk['Decreasing',]+senk['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
nklm = lm(pars~age_group*condition, data=nkpars)
summary(nklm)
CI = confint(nklm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=nkpars), cond = effsize::cohen.d(pars~condition,data=nkpars))
capture.output(list(summary(nklm), CI=CI,d=cohend), file='output/nklm_ethics.txt')
dev.off()
#setwd("C:/Users/alexa/Desktop/AnalysisDataNewProbablilities")
setwd('~/Downloads')
dat   = read.delim('DFEMG_004_NEW.txt', sep = '\t', header = F)
#setwd("C:/Users/alexa/Desktop/AnalysisDataNewProbablilities")
setwd('~/Downloads')
list.files()
dat   = read.delim('DFEMG_004_NEW.txt', sep = '\t', header = F)
read.delim('DFEMG_004_NEW.txt', sep = '\t', header = F)
dat   = read.delim('DFEMG_004_New.txt', sep = '\t', header = F)
nRows = nrow(dat)
nRows
head(dat)
colnames(dat) = c('zyg', 'scr', 'cor', 't1', 't2', 't3', 't4', 't5', 't6', 't7', 't8', 'NA')
dat
head(dat)
triggerList = c('fix'=6, 'risky'=3, 'certain'=4, 'posfb' = 7, 'negfb'=8)
taskStart = min(as.numeric(rownames(dat[dat$t1==5,])))
dat = dat[taskStart:nrow(dat), ]
rownames(dat) = 1:nrow(dat)
head(dat)
dat[dat$t1]
dat
dat.head()
head(dat)
x = dat[dat$t1]
x
head(x)
View(apars)
apars  = apars[apars$id!=158, ]
ma  = tapply(apars$pars, list(apars$condition, apars$age_group), mean, na.rm=T)
sea = tapply(apars$pars, list(apars$condition, apars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(ma-sea,ma+sea)))
plot(ma['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Decision Threshold', xlab='', main=expression(a))
arrows(c(1,2), ma['Stable',]-sea['Stable',], c(1,2), ma['Stable',]+sea['Stable',], length=0, col='brown')
points(ma['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), ma['Decreasing',]-sea['Decreasing',], c(1,2), ma['Decreasing',]+sea['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
cohend
ma
# a
apars = models[models$parsname=='a',]
cutoff = mean(apars$LL, na.rm=T) + 3*sd(apars$LL, na.rm=T)
apars  = apars[apars$LL < cutoff,]
nrow(apars)
# a
apars = models[models$parsname=='a',]
# cutoff = mean(apars$LL, na.rm=T) + 3*sd(apars$LL, na.rm=T)
# apars  = apars[apars$LL < cutoff,]
apars  = apars[apars$id!=158, ]
ma  = tapply(apars$pars, list(apars$condition, apars$age_group), mean, na.rm=T)
sea = tapply(apars$pars, list(apars$condition, apars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(ma-sea,ma+sea)))
plot(ma['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Decision Threshold', xlab='', main=expression(a))
arrows(c(1,2), ma['Stable',]-sea['Stable',], c(1,2), ma['Stable',]+sea['Stable',], length=0, col='brown')
points(ma['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), ma['Decreasing',]-sea['Decreasing',], c(1,2), ma['Decreasing',]+sea['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
capture.output(list(summary(alm), CI=CI, d=cohend), file='output/alm_ethics.txt')
setwd("~/Desktop/Ongoing/PICCAgeing/github/Models/RTFDDM")
pdf('plots/RFTDDMpars_ethics.pdf', width=12, height=4)
layout(matrix(1:3,1,3))
# a
apars = models[models$parsname=='a',]
apars  = apars[apars$id!=158, ]
ma  = tapply(apars$pars, list(apars$condition, apars$age_group), mean, na.rm=T)
sea = tapply(apars$pars, list(apars$condition, apars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(ma-sea,ma+sea)))
plot(ma['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Decision Threshold', xlab='', main=expression(a))
arrows(c(1,2), ma['Stable',]-sea['Stable',], c(1,2), ma['Stable',]+sea['Stable',], length=0, col='brown')
points(ma['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), ma['Decreasing',]-sea['Decreasing',], c(1,2), ma['Decreasing',]+sea['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
capture.output(list(summary(alm), CI=CI, d=cohend), file='output/alm_ethics.txt')
# ter
t0pars = models[models$parsname=='t0',]
mt0  = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), mean, na.rm=T)
set0 = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mt0-set0,mt0+set0)))
plot(mt0['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Non-Decision Time', xlab='', main=expression(t0))
arrows(c(1,2), mt0['Stable',]-set0['Stable',], c(1,2), mt0['Stable',]+set0['Stable',], length=0, col='brown')
points(mt0['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mt0['Decreasing',]-set0['Decreasing',], c(1,2), mt0['Decreasing',]+set0['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
t0lm = lm(pars~age_group*condition, data=t0pars)
summary(t0lm)
CI = confint(t0lm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=t0pars), cond = effsize::cohen.d(pars~condition,data=t0pars))
capture.output(list(summary(t0lm), CI=CI, d=cohend), file='output/t0lm_ethics.txt')
# nk
nkpars = models[models$parsname=='nk',]
mnk  = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), mean, na.rm=T)
senk = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mnk-senk,mnk+senk)))
plot(mnk['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='RFT Window', xlab='', main=expression(nt))
arrows(c(1,2), mnk['Stable',]-senk['Stable',], c(1,2), mnk['Stable',]+senk['Stable',], length=0, col='brown')
points(mnk['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mnk['Decreasing',]-senk['Decreasing',], c(1,2), mnk['Decreasing',]+senk['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
nklm = lm(pars~age_group*condition, data=nkpars)
summary(nklm)
CI = confint(nklm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=nkpars), cond = effsize::cohen.d(pars~condition,data=nkpars))
capture.output(list(summary(nklm), CI=CI,d=cohend), file='output/nklm_ethics.txt')
dev.off()
summary
summary(nklm)
pdf('plots/RFTDDMpars_ethics.pdf', width=12, height=4)
layout(matrix(1:3,1,3))
# a
apars = models[models$parsname=='a',]
apars  = apars[apars$id!=158, ]
ma  = tapply(apars$pars, list(apars$condition, apars$age_group), mean, na.rm=T)
sea = tapply(apars$pars, list(apars$condition, apars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(ma-sea,ma+sea)))
plot(ma['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Decision Threshold', xlab='', main=expression(a))
arrows(c(1,2), ma['Stable',]-sea['Stable',], c(1,2), ma['Stable',]+sea['Stable',], length=0, col='brown')
points(ma['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), ma['Decreasing',]-sea['Decreasing',], c(1,2), ma['Decreasing',]+sea['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
alm = lm(pars~age_group*condition, data=apars)
summary(alm)
CI     = confint(alm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=apars), cond = effsize::cohen.d(pars~condition,data=apars))
capture.output(list(summary(alm), CI=CI, d=cohend), file='output/alm_ethics.txt')
# ter
t0pars = models[models$parsname=='t0',]
mt0  = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), mean, na.rm=T)
set0 = tapply(t0pars$pars, list(t0pars$condition, t0pars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mt0-set0,mt0+set0)))
plot(mt0['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='Non-Decision Time', xlab='', main=expression(t0))
arrows(c(1,2), mt0['Stable',]-set0['Stable',], c(1,2), mt0['Stable',]+set0['Stable',], length=0, col='brown')
points(mt0['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mt0['Decreasing',]-set0['Decreasing',], c(1,2), mt0['Decreasing',]+set0['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
#legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
t0lm = lm(pars~age_group*condition, data=t0pars)
summary(t0lm)
CI = confint(t0lm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=t0pars), cond = effsize::cohen.d(pars~condition,data=t0pars))
capture.output(list(summary(t0lm), CI=CI, d=cohend), file='output/t0lm_ethics.txt')
# nk
nkpars = models[models$parsname=='nk',]
mnk  = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), mean, na.rm=T)
senk = tapply(nkpars$pars, list(nkpars$condition, nkpars$age_group), plotrix::std.error, na.rm=T)
ylim = range(pretty(c(mnk-senk,mnk+senk)))
plot(mnk['Stable',], col='brown', ylim=ylim, xaxt='n', pch=16, cex=2, ylab='RFT Window', xlab='', main=expression(nt))
arrows(c(1,2), mnk['Stable',]-senk['Stable',], c(1,2), mnk['Stable',]+senk['Stable',], length=0, col='brown')
points(mnk['Decreasing',], col='orange', pch=16, cex=2)
arrows(c(1,2), mnk['Decreasing',]-senk['Decreasing',], c(1,2), mnk['Decreasing',]+senk['Decreasing',], length=0, col='orange')
axis(1, at=c(1,2), labels=c('Young', 'Old'))
#legend('topleft', bty='n', col=c('brown', 'orange'), lty=1, pch=16, legend=c('Stable', 'Decreasing'))
nklm = lm(pars~age_group*condition, data=nkpars)
summary(nklm)
CI = confint(nklm)
cohend = list(age_group = effsize::cohen.d(pars~age_group,data=nkpars), cond = effsize::cohen.d(pars~condition,data=nkpars))
capture.output(list(summary(nklm), CI=CI,d=cohend), file='output/nklm_ethics.txt')
dev.off()
RFDDM = read.csv('simulation_data.csv')
pdf('plots/simulations.pdf')
# RFDDM model
layout(matrix(1:4, 2, 2,byrow=T))
RFDDM$trial = unlist(by(RFDDM$id, RFDDM$id, FUN = function(x) 1:length(x)))
RFDDM$timebin = dplyr::ntile(RFDDM$trial, 4)
RFDDM$stimbin = dplyr::ntile(RFDDM$stim, 10)
RFDDM$abin = cut(RFDDM$true_a, 2, labels=c('Low', 'High'))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition, RFDDM$abin), mean)
# Low
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\n Low a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'Low'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing \nLow a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'Low'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# High
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
dev.off()
RFDDM$trial = unlist(by(RFDDM$id, RFDDM$id, FUN = function(x) 1:length(x)))
RFDDM$timebin = dplyr::ntile(RFDDM$trial, 4)
RFDDM$stimbin = dplyr::ntile(RFDDM$stim, 10)
RFDDM$abin = cut(RFDDM$true_a, 2, labels=c('Low', 'High'))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition, RFDDM$abin), mean)
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition), mean)
# Low
# Stable
plot(rownames(mResp), mResp[,1,'Stable'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\n Low a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing \nLow a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
layout(matrix(1:2, 1, 2,byrow=T))
RFDDM$trial = unlist(by(RFDDM$id, RFDDM$id, FUN = function(x) 1:length(x)))
RFDDM$timebin = dplyr::ntile(RFDDM$trial, 4)
RFDDM$stimbin = dplyr::ntile(RFDDM$stim, 10)
RFDDM$abin = cut(RFDDM$true_a, 2, labels=c('Low'High))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition), mean)
# Low
# Stable
plot(rownames(mResp), mResp[,1,'Stable'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable Prevalence', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing Prevalence', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
pdf('plots/simulations.pdf')
# RFDDM model
# overall
layout(matrix(1:2, 1, 2,byrow=T))
RFDDM$trial = unlist(by(RFDDM$id, RFDDM$id, FUN = function(x) 1:length(x)))
RFDDM$timebin = dplyr::ntile(RFDDM$trial, 4)
RFDDM$stimbin = dplyr::ntile(RFDDM$stim, 10)
RFDDM$abin = cut(RFDDM$true_a, 2, labels=c('Low', 'High'))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition), mean)
# Stable
plot(rownames(mResp), mResp[,1,'Stable'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable Prevalence', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing Prevalence', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Per abin
layout(matrix(1:4, 2, 2,byrow=T))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition, RFDDM$abin), mean)
# Low
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\n Low a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'Low'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing \nLow a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'Low'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# High
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
dev.off()
pdf('plots/simulations1.pdf', width = 12, height=6 )
# RFDDM model
# overall
layout(matrix(1:2, 1, 2,byrow=T))
RFDDM$trial = unlist(by(RFDDM$id, RFDDM$id, FUN = function(x) 1:length(x)))
RFDDM$timebin = dplyr::ntile(RFDDM$trial, 4)
RFDDM$stimbin = dplyr::ntile(RFDDM$stim, 10)
RFDDM$abin = cut(RFDDM$true_a, 2, labels=c('Low', 'High'))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition), mean)
# Stable
plot(rownames(mResp), mResp[,1,'Stable'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable Prevalence', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing Prevalence', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
dev.off()
pdf('plots/simulations2.pdf', width = 12, height=6 )
layout(matrix(1:4, 2, 2,byrow=T))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition, RFDDM$abin), mean)
# Low
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\n Low a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'Low'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing \nLow a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'Low'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# High
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
dev.off()
# Per abin
pdf('plots/simulations2.pdf', width = 8, height=6 )
layout(matrix(1:4, 2, 2,byrow=T))
mResp = tapply(RFDDM$choices, list(RFDDM$stimbin, RFDDM$timebin, RFDDM$condition, RFDDM$abin), mean)
# Low
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\n Low a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'Low'], type='b', col='blue')
legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'Low'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing \nLow a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'Low'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# High
# Stable
plot(rownames(mResp), mResp[,1,'Stable', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Stable\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Stable', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
# Decreasing
plot(rownames(mResp), mResp[,1,'Decreasing', 'High'], type='b', ylab = 'p(Blue)', xlab='', xaxt='n', col='red',
main = 'Decreasing\nHigh a', ylim=c(0,1))
axis(1, at=c(1,max(RFDDM$stimbin)), labels = c('Very Purple', 'Very Blue'))
lines(rownames(mResp), mResp[,4,'Decreasing', 'High'], type='b', col='blue')
#legend('topleft', bty='n', lty=1, pch=1, col=c('red', 'blue'), legend=c('First 200 trials', 'Last 200 trials'))
dev.off()
# Fit -----------

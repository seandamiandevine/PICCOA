pdf('plots/simprocess.pdf', width=14, height=4)
layout(matrix(1:2, ncol=2))
obj     = 40
sub     = 70
minstim = 1
maxstim = 100
minV    = -5
maxV    = 5
z       = 0.5*a
ter     = .2
s       = 1
t       = 1
td      = .001
v  = (obj-minstim)/(maxstim-minstim) * (maxV-minV) + minV
pz = (sub-minstim)/(maxstim-minstim)
# low a
set.seed(2022)
a  = 1
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
text(tp*.9, z+.025, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
text(tp*.9, 0.5*a-.04, 'Unbiased start')
arrows(0, z-.1, 20, .2, col='red')
text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
# high a
set.seed(2022)
a  = 3
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Higher Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=z, lty='dashed')
text(tp*.9, z+.1, 'Biased start')
abline(h = c(1.5,2.5), col=c(scales::alpha('purple', 0.25), scales::alpha('blue', 0.25)), lwd=3)
arrows(0, -.45, tp, -.45, xpd=T)
dev.off()
set.seed(2022)
a  = 1
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
text(tp*.95, z+.03, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
text(tp*.9, 0.5*a-.04, 'Unbiased start')
arrows(0, z-.1, 20, .2, col='red')
text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
text(tp*.95, 0.5*a-.04, 'Unbiased start')
text(tp*.94, 0.5*a-.04, 'Unbiased start')
text(tp*.93, 0.5*a-.04, 'Unbiased start')
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
text(tp*.95, z+.03, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
text(tp*.93, 0.5*a-.04, 'Unbiased start')
arrows(0, z-.1, 20, .2, col='red')
text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
text(tp*.95, z+.03, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
text(tp*.94, 0.5*a-.04, 'Unbiased start')
arrows(0, z-.1, 20, .2, col='red')
text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
pdf('plots/simprocess.pdf', width=14, height=4)
layout(matrix(1:2, ncol=2))
obj     = 40
sub     = 70
minstim = 1
maxstim = 100
minV    = -5
maxV    = 5
z       = 0.5*a
ter     = .2
s       = 1
t       = 1
td      = .001
v  = (obj-minstim)/(maxstim-minstim) * (maxV-minV) + minV
pz = (sub-minstim)/(maxstim-minstim)
# low a
set.seed(2022)
a  = 1
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
text(tp*.95, z+.03, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
text(tp*.94, 0.5*a-.04, 'Unbiased start')
arrows(0, z-.1, 20, .2, col='red')
text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
# high a
set.seed(2022)
a  = 3
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Higher Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=z, lty='dashed')
text(tp*.9, z+.1, 'Biased start')
abline(h = c(1.5,2.5), col=c(scales::alpha('purple', 0.25), scales::alpha('blue', 0.25)), lwd=3)
arrows(0, -.45, tp, -.45, xpd=T)
dev.off()
as = seq(.5, 3, by=.5)
pblue = c()
seblue = c()
mrt = c()
sert = c()
rts = c()
resps = c()
as = seq(.5, 3, by=.5)
pblue = c()
seblue = c()
mrt = c()
sert = c()
for(a in as) {
rts = c()
resps = c()
for(i in 1:100) {
sub= 70
v  = (obj-minstim)/(maxstim-minstim) * (maxV-minV) + minV
pz = (sub-minstim)/(maxstim-minstim)
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a |x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
if(tp>10000) errorCondition('diffusion process ran too long!!')
}
rts[i] = tp/(1/td)+ter
resps[i] = ifelse(x[tp]<=0, 0, 1)
}
pblue = c(pblue, mean(resps))
seblue = c(seblue, plotrix::std.error(resps))
mrt = c(mrt, mean(rts))
sert = c(sert, plotrix::std.error(rts))
}
plot(as, pblue, type='b', xlab = 'Decision Thresholds', ylab = 'p(Judge Dot as Blue)', pch=16, ylim=c(0,1))
arrows(as, pblue-seblue, as, pblue+seblue, length=0)
legend('topright', bty='n', legend=paste0('True Blueness: ', stim[t]))
plot(as, mrt, type='b', xlab = 'Decision Thresholds', ylab = 'Avg. RT (s.)', pch=16, ylim=range(pretty(c(mrt-sert, mrt+sert))))
arrows(as, mrt-sert, as, mrt+sert, length=0)
legend('topright', bty='n', legend=paste0('True Blueness: ', obj))
as = seq(.5, 3, by=.5)
pblue = c()
seblue = c()
mrt = c()
sert = c()
for(a in as) {
rts = c()
resps = c()
for(i in 1:100) {
sub= 80
v  = (obj-minstim)/(maxstim-minstim) * (maxV-minV) + minV
pz = (sub-minstim)/(maxstim-minstim)
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a |x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
if(tp>10000) errorCondition('diffusion process ran too long!!')
}
rts[i] = tp/(1/td)+ter
resps[i] = ifelse(x[tp]<=0, 0, 1)
}
pblue = c(pblue, mean(resps))
seblue = c(seblue, plotrix::std.error(resps))
mrt = c(mrt, mean(rts))
sert = c(sert, plotrix::std.error(rts))
}
# slope
plot(as, pblue, type='b', xlab = 'Decision Thresholds', ylab = 'p(Judge Dot as Blue)', pch=16, ylim=c(0,1))
arrows(as, pblue-seblue, as, pblue+seblue, length=0)
plot(as, mrt, type='b', xlab = 'Decision Thresholds', ylab = 'Avg. RT (s.)', pch=16, ylim=range(pretty(c(mrt-sert, mrt+sert))))
arrows(as, mrt-sert, as, mrt+sert, length=0)
pdf('plots/simSlope.pdf', width=10, height=6)
layout(matrix(1:2, ncol=2))
plot(as, pblue, type='b', xlab = 'Decision Thresholds', ylab = 'p(Judge Dot as Blue)', pch=16, ylim=c(0,1))
arrows(as, pblue-seblue, as, pblue+seblue, length=0)
plot(as, mrt, type='b', xlab = 'Decision Thresholds', ylab = 'Avg. RT (s.)', pch=16, ylim=range(pretty(c(mrt-sert, mrt+sert))))
arrows(as, mrt-sert, as, mrt+sert, length=0)
dev.off()
plot(as, pblue, type='b', xlab = 'Decision Thresholds', ylab = 'p(Judge Dot as Blue)', pch=16, ylim=c(0,1),
main='Higher Thresholds = Fewer Errors')
arrows(as, pblue-seblue, as, pblue+seblue, length=0)
plot(as, mrt, type='b', xlab = 'Decision Thresholds', ylab = 'Avg. RT (s.)', pch=16, ylim=range(pretty(c(mrt-sert, mrt+sert))),
main = 'Higher Thresholds = Longer RT')
arrows(as, mrt-sert, as, mrt+sert, length=0)
pdf('plots/simSlope.pdf', width=10, height=6)
layout(matrix(1:2, ncol=2))
plot(as, pblue, type='b', xlab = 'Decision Thresholds', ylab = 'p(Judge Dot as Blue)', pch=16, ylim=c(0,1),
main='Higher Thresholds = Fewer Errors')
arrows(as, pblue-seblue, as, pblue+seblue, length=0)
plot(as, mrt, type='b', xlab = 'Decision Thresholds', ylab = 'Avg. RT (s.)', pch=16, ylim=range(pretty(c(mrt-sert, mrt+sert))),
main = 'Higher Thresholds = Longer RT')
arrows(as, mrt-sert, as, mrt+sert, length=0)
dev.off()
pEth
pdf('plots/EthicsChoice.pdf', width=10, height=6)
pEth = tapply(d.ethics$response, list(d.ethics$stimbin, d.ethics$timebin, d.ethics$condition, d.ethics$age_group), mean)
layout(matrix(1:4, 2,2,byrow=T))
par(mar=c(5.1 ,6.1, 4.1, 2.1))
# Young
plot(pEth[,1,'Stable','YA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)',
ylim=c(0,1), xlab='', main = 'Stable Prevalence')
lines(pEth[,5,'Stable','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
legend('bottomright', bty='n', pch=1, lty=1,col=c('red','blue'), legend=c('First 48 Trials', 'Last 48 Trials'))
mtext('Young', side=2, line=5, font=2)
plot(pEth[,1,'Decreasing','YA'], type='b', col='red',  xaxt='n',
ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='',  main = 'Decreasing Prevalence')
lines(pEth[,5,'Decreasing','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
# Old
plot(pEth[,1,'Stable','OA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='')
lines(pEth[,5,'Stable','OA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
mtext('Old', side=2, line=5,font=2)
plot(pEth[,1,'Decreasing','OA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='')
lines(pEth[,5,'Decreasing','OA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
dev.off()
dev.off()
setwd("~/Documents/PICCOA/github")
pdf('plots/EthicsChoice.pdf', width=10, height=6)
pEth = tapply(d.ethics$response, list(d.ethics$stimbin, d.ethics$timebin, d.ethics$condition, d.ethics$age_group), mean)
layout(matrix(1:4, 2,2,byrow=T))
par(mar=c(5.1 ,6.1, 4.1, 2.1))
# Young
plot(pEth[,1,'Stable','YA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)',
ylim=c(0,1), xlab='', main = 'Stable Prevalence')
lines(pEth[,5,'Stable','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
legend('bottomright', bty='n', pch=1, lty=1,col=c('red','blue'), legend=c('First 48 Trials', 'Last 48 Trials'))
mtext('Young', side=2, line=5, font=2)
plot(pEth[,1,'Decreasing','YA'], type='b', col='red',  xaxt='n',
ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='',  main = 'Decreasing Prevalence')
lines(pEth[,5,'Decreasing','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
# Old
plot(pEth[,1,'Stable','OA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='')
lines(pEth[,5,'Stable','OA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
mtext('Old', side=2, line=5,font=2)
plot(pEth[,1,'Decreasing','OA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='')
lines(pEth[,5,'Decreasing','OA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
dev.off()
pdf('plots/simprocess.pdf', width=10, height=4)
layout(matrix(1:2, ncol=2))
obj     = 40
sub     = 70
minstim = 1
maxstim = 100
minV    = -5
maxV    = 5
z       = 0.5*a
ter     = .2
s       = 1
t       = 1
td      = .001
v  = (obj-minstim)/(maxstim-minstim) * (maxV-minV) + minV
pz = (sub-minstim)/(maxstim-minstim)
# low a
set.seed(2022)
a  = 1
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
#text(tp*.95, z+.03, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
#text(tp*.94, 0.5*a-.04, 'Unbiased start')
arrows(0, z-.1, 20, .2, col='red')
#text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
# high a
set.seed(2022)
a  = 3
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Higher Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=z, lty='dashed')
#text(tp*.9, z+.1, 'Biased start')
abline(h = c(1.5,2.5), col=c(scales::alpha('purple', 0.25), scales::alpha('blue', 0.25)), lwd=3)
arrows(0, -.45, tp, -.45, xpd=T)
dev.off()
setwd("~/Documents/PICCOA/github/models/RTFDDM")
pdf('plots/simprocess.pdf', width=8, height=4)
layout(matrix(1:2, ncol=2))
obj     = 40
sub     = 70
minstim = 1
maxstim = 100
minV    = -5
maxV    = 5
z       = 0.5*a
ter     = .2
s       = 1
t       = 1
td      = .001
v  = (obj-minstim)/(maxstim-minstim) * (maxV-minV) + minV
pz = (sub-minstim)/(maxstim-minstim)
# low a
set.seed(2022)
a  = 1
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Low Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=z, lty='dashed')
#text(tp*.95, z+.03, 'Biased start')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=0.5*a, col='darkgrey', lty='dashed')
#text(tp*.94, 0.5*a-.04, 'Unbiased start')
#arrows(0, z-.1, 20, .2, col='red')
#text(3.5, .4, 'Drift rate', col='red')
arrows(0, -.15, tp, -.15, xpd=T)
# high a
set.seed(2022)
a  = 3
z  = pz*a
x = c(z)
tp = 1
while(1) {
# accumulate evidence
if (x[tp] > a || x[tp] < 0) break
x[tp+1] = x[tp] + v*td + s*rnorm(1)*sqrt(td)
# update
tp=tp+1
}
x[x>a] = a; x[x<0]=0
plot(1:tp, x, type='l', xlab='Time (ms.)', ylab='', ylim=c(0,a), main='Higher Decision Thresholds',
xaxt='n', yaxt='n')
abline(h=c(0,a), col=c('purple','blue'), lwd=3)
abline(h=z, lty='dashed')
#text(tp*.9, z+.1, 'Biased start')
abline(h = c(1.5,2.5), col=c(scales::alpha('purple', 0.25), scales::alpha('blue', 0.25)), lwd=3)
arrows(0, -.45, tp, -.45, xpd=T)
dev.off()
# pBlue over a --------
d.dots$trialintensity
d.dots$trialstim[d.dots$trialintensity==40,]
d.dots$trialstim[d.dots$trialintensity==40]
d.ethics$stimbin    = cut(d.ethics$norm_mean, 11, labels=F)
# Young
plot(pEth[,1,'Stable','YA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)',
ylim=c(0,1), xlab='', main = 'Stable Prevalence')
lines(pEth[,5,'Stable','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
legend('bottomright', bty='n', pch=1, lty=1,col=c('red','blue'), legend=c('First 48 Trials', 'Last 48 Trials'))
mtext('Young', side=2, line=5, font=2)
plot(pEth[,1,'Decreasing','YA'], type='b', col='red',  xaxt='n',
ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='',  main = 'Decreasing Prevalence')
lines(pEth[,5,'Decreasing','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
pEth = tapply(d.ethics$response, list(d.ethics$stimbin, d.ethics$timebin, d.ethics$condition, d.ethics$age_group), mean)
# Young
plot(pEth[,1,'Stable','YA'], type='b', col='red',  xaxt='n', ylab = 'p(Choose Unethical)',
ylim=c(0,1), xlab='', main = 'Stable Prevalence')
lines(pEth[,5,'Stable','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
legend('bottomright', bty='n', pch=1, lty=1,col=c('red','blue'), legend=c('First 48 Trials', 'Last 48 Trials'))
mtext('Young', side=2, line=5, font=2)
plot(pEth[,1,'Decreasing','YA'], type='b', col='red',  xaxt='n',
ylab = 'p(Choose Unethical)', ylim=c(0,1), xlab='',  main = 'Decreasing Prevalence')
lines(pEth[,5,'Decreasing','YA'], type='b', col='blue')
axis(1, at=range(d.ethics$stimbin), labels=c('Very Ethical', 'Very Unethical'))
zz = d.ethics[d.ethics$age_group=='YA', ]
zz = d.ethics[d.ethics$age_group=='YA', ]
yamod =glmer(response ~ age_groupc*conditionc*trial0*norm_mean0c + (trial0| id) ,
family = binomial, control=glmerControl(optimizer="bobyqa"),
data = zz)
yamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) ,
family = binomial, control=glmerControl(optimizer="bobyqa"),
data = zz)
summary(yamod)
oamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) ,
family = binomial, control=glmerControl(optimizer="bobyqa"),
data = zz)
summary(oamod)
zz = d.ethics[d.ethics$age_group=='OA', ]
oamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) ,
family = binomial, control=glmerControl(optimizer="bobyqa"),
data = zz)
summary(oamod)
tmp = d.ethics[d.ethics$age_group=='YA', ]
yamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) , family = binomial, control=glmerControl(optimizer="bobyqa"), data = tmp)
summary(yamod)
# OA
tmp = d.ethics[d.ethics$age_group=='OA', ]
oamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) , family = binomial, control=glmerControl(optimizer="bobyqa"), data = tmp)
summary(oamod)
setwd("~/Documents/PICCOA/github")
capture.output(summary(yamod), file='output/YAonlyMLM.txt')
capture.output(summary(oamod), file='output/OAonlyMLM.txt')
capture.output(summary(yamod), file='output/YAonlyMLM_Ethics.txt')
capture.output(summary(oamod), file='output/OAonlyMLM_Ethics.txt')
yamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) , family = binomial, control=glmerControl(optimizer="bobyqa"), data = d.ethics[d.ethics$age_group=='YA', ])
summary(yamod)
capture.output(summary(yamod), file='output/YAonlyMLM_Ethics.txt')
# OA
tmp = d.ethics[d.ethics$age_group=='OA', ]
oamod =glmer(response ~ conditionc*trial0*norm_mean0c + (trial0| id) , family = binomial, control=glmerControl(optimizer="bobyqa"), data = d.ethics[d.ethics$age_group=='OA',])
summary(oamod)
capture.output(summary(oamod), file='output/OAonlyMLM_Ethics.txt')
